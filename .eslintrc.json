{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "env": {
    "node": true,
    "es6": true
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    // Error prevention
    "no-console": ["warn", { "allow": ["warn", "error", "info"] }],
    "no-return-await": "error",
    "require-atomic-updates": "error",

    // TypeScript specific
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "explicit",
        "overrides": {
          "constructors": "no-public"
        }
      }
    ],

    // Code style
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "MemberExpression": 1
      }
    ],
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "single", { "avoidEscape": true }],
    "semi": ["error", "always"],
    "comma-dangle": ["error", "always-multiline"],
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 0 }],
    "eol-last": ["error", "always"],

    // Best practices
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-var": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "no-param-reassign": "error",
    "no-multi-spaces": "error",
    "no-trailing-spaces": "error",
    "space-in-parens": ["error", "never"],
    "object-curly-spacing": ["error", "always"],

    // Promises
    "no-async-promise-executor": "error",
    "no-promise-executor-return": "error",
    "prefer-promise-reject-errors": "error",

    // Error handling
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",

    // Imports
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],

    // Accessibility
    "max-len": [
      "error",
      {
        "code": 100,
        "tabWidth": 2,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],

    // Firebase specific
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["firebase/*"],
            "message": "Import from firebase-admin instead"
          }
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.spec.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["scripts/**/*.ts"],
      "rules": {
        "no-console": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "ignorePatterns": ["dist", "node_modules", "coverage", "*.js"]
}
